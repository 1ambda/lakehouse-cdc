---
version: '3.6'

# Configure Network
networks:
  default:
    name: lakehouse-cdc

# Configure Services
services:


  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka0
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083
      # KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      DYNAMIC_CONFIG_ENABLED: 'true'


  kafka0:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka0
    container_name: kafka0
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka0 -Dcom.sun.management.jmxremote.rmi.port=9997
      KAFKA_PROCESS_ROLES: 'broker,controller'
      CLUSTER_ID: 'p8fFEbKGQ22B6M_Da_vCBw'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'


  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: mysql
    hostname: mysql
    ports:
      - "3306:3306"
    environment:
      TZ: UTC
      MYSQL_ROOT_USER: "root"
      MYSQL_ROOT_PASSWORD: "admin"
    volumes:
      - ./_docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./_docker/mysql/entrypoint.sql:/docker-entrypoint-initdb.d/entrypoint.sql


  connect:
    container_name: connect
    image: quay.io/debezium/connect:2.7.3.Final
    ports:
      - 8083:8083
    depends_on:
      - kafka0
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka0:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect-debezium-config
      - OFFSET_STORAGE_TOPIC=connect-debezium-offset
      - STATUS_STORAGE_TOPIC=connect-debezium-status
      - ENABLE_DEBEZIUM_KC_REST_EXTENSION=true
      - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension,io.debezium.connector.mysql.rest.DebeziumMySqlConnectRestExtension,io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension,io.debezium.connector.mongodb.rest.DebeziumMongoDbConnectRestExtension,io.debezium.connector.oracle.rest.DebeziumOracleConnectRestExtension,io.debezium.connector.sqlserver.rest.DebeziumSqlServerConnectRestExtension
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - CONNECT_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - CONNECT_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE
      - CONNECT_ACCESS_CONTROL_ALLOW_HEADERS=origin,content-type,accept,authorization
